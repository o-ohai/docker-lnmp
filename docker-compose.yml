version: '3.8'

#/etc/hosts
x-hosts: &hosts
  extra_hosts:
    - default.dev.com:${NGINX_IP}

services:
  ### NGINX ################################################
  nginx:
    build: ./nginx
    container_name: nginx
    privileged: true
    ports:
      - ${NGINX_HOST_HTTP_PORT}:80
      - ${NGINX_HOST_HTTPS_PORT}:443
    restart: always
    depends_on:
      - php
    volumes:
      # nginx默认配置文件
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      # 项目代码
      - ${WEB_ROOT_PATH}:/var/www/
      # nginx日志
      - ${NGINX_LOG_PATH}:/var/log/nginx/
    networks:
      backend:
        ipv4_address: ${NGINX_IP}

  ### MySQL ################################################
  mysql:
    build:
      context: ./mysql
      args:
        - VERSION=${MYSQL_VERSION}
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${MYSQL_TIMEZONE}
    volumes:
      # mysql默认配置文件
      - ${MYSQL_CONF_PATH}:/etc/mysql/conf.d/docker.cnf
      # 数据文件
      - ${MYSQL_DATA_PATH}:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    privileged: true
    ports:
      - ${MYSQL_PORT}:3306
    networks:
      backend:
        ipv4_address: ${MYSQL_IP}

  ### PHP ################################################
  php:
    build:
      context: ./php
      args:
        - VERSION=${PHP_VERSION}
    container_name: php
    privileged: true
    restart: always
    cap_add:
      - SYS_PTRACE
    ports:
      - 9000:9000
    #/etc/hosts
    <<: *hosts
    volumes:
      # php 配置文件
      - ./php/config/php.ini:/usr/local/etc/php/php.ini
      - ./php/config/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./php/config/php-fpm.d:/usr/local/etc/php-fpm.d
      # 项目代码
      - ${WEB_ROOT_PATH}:/var/www/
      # php-fpm日志
      - ${PHP_LOG_PATH}:/var/log/php/
    networks:
      backend:
        ipv4_address: ${PHP_IP}

  ### Redis ################################################
  redis:
    build:
      context: ./redis
      args:
        - VERSION=${REDIS_VERSION}
    container_name: redis
    command: redis-server /etc/redis/redis.conf
    restart: always
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ${REDIS_DATA_PATH}:/data
      - ${REDIS_CONF_PATH}:/etc/redis/redis.conf
    networks:
      backend:
        ipv4_address: ${REDIS_IP}

  ### Mongo ################################################
  mongo:
    build:
      context: ./mongo
      args:
        - MONGO_VERSION=${MONGO_VERSION}
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    command: --auth
    restart: always
    privileged: true
    ports:
      - ${MONGO_PORT}:27017
    networks:
      backend:
        ipv4_address: ${MONGO_IP}

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: ${SUBNET}
